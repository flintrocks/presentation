contract Lottery {
  let ticketPrice: Int
  let oddsThreshold: Int
  var jackpot: Wei = Wei(unsafeRawValue: 0)
}

Lottery :: sender <- (any) {
  public init(ticketPrice: Int, oddsThreshold: Int) {
    self.ticketPrice = ticketPrice
    self.oddsThreshold = oddsThreshold
  }

  @payable
  public mutating func buyTicket(implicit value: Wei) -> Bool {
    if value.getRawValue() != ticketPrice { fatalError() }
    jackpot.transfer(source: &value)
    var success: Bool = false
    if randomNumber() < oddsThreshold {
      send(address: sender, value: &jackpot)
      success = true
    }
    return success
  }

  func randomNumber() -> Int { // ... }
}
